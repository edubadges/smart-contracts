Type: Badge Class
Version: 1.0
Description: (Un)endorse a badge class.
Template: {"badgeClass":{"type":"str","desc":"ID van de badge klasse.","name":"Badge klasse"},"endorse":{"type":"bool","desc":"Endorse deze badge klasse of niet meer.","name":"Endorse"}}
Init: YXdhaXQgcXVlcnkoIkNSRUFURSIsICJiYWRnZWNsYXNzZXMiLCAiKGNsYXNzIFZBUkNIQVIoMjU2KSBQUklNQVJZIEtFWSBOT1QgTlVMTCwgIg0KICAgICsgImZpcnN0X2VuZG9yc2VyIFZBUkNIQVIoMzUpIE5PVCBOVUxMIFJFRkVSRU5DRVMgZW50aXRpZXMoZW50aXR5KSwgbWV0YWRhdGEgSlNPTik7IiwgW10pOw0KYXdhaXQgcXVlcnkoIkNSRUFURSIsICJlbmRvcnNlY2xhc3NlcyIsICIoY2xhc3MgVkFSQ0hBUigyNTYpIE5PVCBOVUxMIFJFRkVSRU5DRVMgYmFkZ2VjbGFzc2VzKGNsYXNzKSwgIg0KICAgICsgImVudGl0eSBWQVJDSEFSKDM1KSBOT1QgTlVMTCBSRUZFUkVOQ0VTIGVudGl0aWVzKGVudGl0eSksIGVuZG9yc2VkIEJPT0wgTk9UIE5VTEwsIFBSSU1BUlkgS0VZIChlbnRpdHksIGNsYXNzKSk7IiwgW10pOw0KYXdhaXQgcXVlcnkoIklOREVYIiwgImVuZG9yc2VjbGFzc2VzIiwgIihjbGFzcykiLCBbImVuZG9yc2VjbGFzc2VzX2NsYXNzX2luZGV4Il0pOw==
Code: aWYgKHBheWxvYWQuYmFkZ2VDbGFzcy5sZW5ndGggPT09IDAgfHwgcGF5bG9hZC5iYWRnZUNsYXNzLmxlbmd0aCA+IDI1Nikgew0KICAgIHJldHVybiAiSW52YWxpZCBiYWRnZSBjbGFzcyBpZC4iOw0KfQ0KLy9DaGVjayBpZiB0aGUgZW50aXR5IGV4aXN0cyBhbmQgaXMgYWxsb3dlZCB0byBjcmVhdGUvZW5kb3JzZSBiYWRnZSBjbGFzc2VzLg0KY29uc3QgZW50aXR5ID0gYXdhaXQgcXVlcnkoIlNFTEVDVCIsICJlbnRpdGllcyIsICJXSEVSRSBlbnRpdHkgPSAkMTsiLCBbZnJvbV0pOw0KaWYgKGVudGl0eS5yb3dzLmxlbmd0aCA9PT0gMCkgew0KICAgIHJldHVybiAiRW50aXR5IGRvZXMgbm90IGV4aXN0cyBvciB1c2VyIGlzIG5vdCBhbiBlbnRpdHkuIjsNCn0NCmlmIChwYXlsb2FkLmVuZG9yc2UpIHsNCiAgICBpZiAoIWVudGl0eS5yb3dzWzBdLmFsbG93ZWQpIHsNCiAgICAgICAgcmV0dXJuICJFbnRpdHkgaXMgd2l0aGRyYXduLiI7DQogICAgfQ0KICAgIGVsc2Ugew0KICAgICAgICAvL0NoZWNrIGlmIHRoZSBpbnN0aXR1dGlvbiBpcyBub3Qgd2l0aGRyYXduICh3ZSBhcmUgc3VyZSBpdCBleGlzdHMgaWYgdGhlIGVudGl0eSBleGlzdHMpDQogICAgICAgIGNvbnN0IGluc3RpdHV0aW9uID0gYXdhaXQgcXVlcnkoIlNFTEVDVCIsICJpbnN0aXR1dGlvbnMiLCAiV0hFUkUgaW5zdGl0dXRpb24gPSAkMTsiLCBbZW50aXR5LnJvd3NbMF0uaW5zdGl0dXRpb25dKTsNCiAgICAgICAgaWYgKCFpbnN0aXR1dGlvbi5yb3dzWzBdLmFsbG93ZWQpIHsNCiAgICAgICAgICAgIHJldHVybiAiSW5zdGl0dXRpb24gb2YgZW50aXR5IGlzIHdpdGhkcmF3bi4iOw0KICAgICAgICB9DQogICAgfQ0KfQ0KaWYgKHBheWxvYWQuZW5kb3JzZSkgew0KICAgIC8vQ3JlYXRlIHRoZSBiYWRnZSBjbGFzcyBpZiBpdCBkb2VzIG5vdCB5ZXQgZXhpc3QuDQogICAgYXdhaXQgcXVlcnkoIklOU0VSVCIsICJiYWRnZWNsYXNzZXMiLCAiKGNsYXNzLCBmaXJzdF9lbmRvcnNlcikgVkFMVUVTICgkMSwgJDIpIE9OIENPTkZMSUNUICINCiAgICAgICAgKyAiT04gQ09OU1RSQUlOVCBiYWRnZWNsYXNzZXNfcGtleSBETyBOT1RISU5HOyIsIFtwYXlsb2FkLmJhZGdlQ2xhc3MsIGZyb21dKTsNCiAgICAvL0VuZG9yc2UgdGhlIGJhZGdlIGNsYXNzDQogICAgYXdhaXQgcXVlcnkoIklOU0VSVCIsICJlbmRvcnNlY2xhc3NlcyIsICIoY2xhc3MsIGVudGl0eSwgZW5kb3JzZWQpIFZBTFVFUyAoJDEsICQyLCAkMykgT04gQ09ORkxJQ1QgIg0KICAgICAgICArICJPTiBDT05TVFJBSU5UIGVuZG9yc2VjbGFzc2VzX3BrZXkgRE8gVVBEQVRFIFNFVCBlbmRvcnNlZCA9ICQzOyIsIFtwYXlsb2FkLmJhZGdlQ2xhc3MsIGZyb20sIHBheWxvYWQuZW5kb3JzZV0pOw0KfQ0KZWxzZSB7DQogICAgLy9XaXRoZHJhdyBvdXIgZW5kb3JzZW1lbnQNCiAgICBjb25zdCBjaGFuZ2VkID0gYXdhaXQgcXVlcnkoIlVQREFURSIsICJlbmRvcnNlY2xhc3NlcyIsICJTRVQgZW5kb3JzZWQgPSAkMyBXSEVSRSBjbGFzcyA9ICQxIEFORCBlbnRpdHkgPSAkMjsiLCBbcGF5bG9hZC5iYWRnZUNsYXNzLCBmcm9tLCBwYXlsb2FkLmVuZG9yc2VdKTsNCiAgICAvL0lmIHRoZSBiYWRnZSBjbGFzcyBkaWRuJ3QgZXhpc3QuDQogICAgaWYgKGNoYW5nZWQucm93Q291bnQgPT09IDApIHsNCiAgICAgICAgcmV0dXJuICJCYWRnZSBjbGFzcyBkb2Vzbid0IGV4aXN0LiI7DQogICAgfQ0KfQ0KcmV0dXJuICJPSyI7

Init as text:
await query("CREATE", "badgeclasses", "(class VARCHAR(256) PRIMARY KEY NOT NULL, "
    + "first_endorser VARCHAR(35) NOT NULL REFERENCES entities(entity), metadata JSON);", []);
await query("CREATE", "endorseclasses", "(class VARCHAR(256) NOT NULL REFERENCES badgeclasses(class), "
    + "entity VARCHAR(35) NOT NULL REFERENCES entities(entity), endorsed BOOL NOT NULL, PRIMARY KEY (entity, class));", []);
await query("INDEX", "endorseclasses", "(class)", ["endorseclasses_class_index"]);
Code as text:
if (payload.badgeClass.length === 0 || payload.badgeClass.length > 256) {
    return "Invalid badge class id.";
}
//Check if the entity exists and is allowed to create/endorse badge classes.
const entity = await query("SELECT", "entities", "WHERE entity = $1;", [from]);
if (entity.rows.length === 0) {
    return "Entity does not exists or user is not an entity.";
}
if (payload.endorse) {
    if (!entity.rows[0].allowed) {
        return "Entity is withdrawn.";
    }
    else {
        //Check if the institution is not withdrawn (we are sure it exists if the entity exists)
        const institution = await query("SELECT", "institutions", "WHERE institution = $1;", [entity.rows[0].institution]);
        if (!institution.rows[0].allowed) {
            return "Institution of entity is withdrawn.";
        }
    }
}
if (payload.endorse) {
    //Create the badge class if it does not yet exist.
    await query("INSERT", "badgeclasses", "(class, first_endorser) VALUES ($1, $2) ON CONFLICT "
        + "ON CONSTRAINT badgeclasses_pkey DO NOTHING;", [payload.badgeClass, from]);
    //Endorse the badge class
    await query("INSERT", "endorseclasses", "(class, entity, endorsed) VALUES ($1, $2, $3) ON CONFLICT "
        + "ON CONSTRAINT endorseclasses_pkey DO UPDATE SET endorsed = $3;", [payload.badgeClass, from, payload.endorse]);
}
else {
    //Withdraw our endorsement
    const changed = await query("UPDATE", "endorseclasses", "SET endorsed = $3 WHERE class = $1 AND entity = $2;", [payload.badgeClass, from, payload.endorse]);
    //If the badge class didn't exist.
    if (changed.rowCount === 0) {
        return "Badge class doesn't exist.";
    }
}
return "OK";