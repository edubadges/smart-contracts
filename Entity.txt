Type: Entity
Version: 2.0
Description: Create or (un)withdraw an entity.
Template: {"receiver":{"type":"addr","desc":"Address van de faculteit/vakgroep/etc.","name":"Entiteit"},"name":{"type":"str","desc":"Naam van de faculteit/vakgroep/etc.","name":"Naam"},"allow":{"type":"bool","desc":"Toestaan of niet meer toestaan.","name":"Toegestaan"}}
Init: YXdhaXQgcXVlcnkoIkNSRUFURSIsICJlbnRpdGllcyIsICIoZW50aXR5IFZBUkNIQVIoMzUpIFBSSU1BUlkgS0VZLCAiICsNCiAgICAiaW5zdGl0dXRpb24gVkFSQ0hBUigzNSkgTk9UIE5VTEwgUkVGRVJFTkNFUyBpbnN0aXR1dGlvbnMoaW5zdGl0dXRpb24pLCByZXZva2VkIEJJR0lOVCk7IiwgW10pOw0KYXdhaXQgcXVlcnkoIkNSRUFURSIsICJlbnRpdHlfbmFtZXMiLCAiKGVudGl0eSBWQVJDSEFSKDM1KSBOT1QgTlVMTCBSRUZFUkVOQ0VTIGVudGl0aWVzKGVudGl0eSksICIgKw0KICAgICJuYW1lIFZBUkNIQVIoMTI4KSBOT1QgTlVMTCwgc3RhcnRfdGltZSBCSUdJTlQgTk9UIE5VTEwsIGVuZF90aW1lIEJJR0lOVCk7IiwgW10pOw==
Code: aWYgKHBheWxvYWQubmFtZS5sZW5ndGggPT09IDAgfHwgcGF5bG9hZC5uYW1lLmxlbmd0aCA+IDEyOCkgew0KICAgIHJldHVybiAiSW52YWxpZCBuYW1lLiI7DQp9DQovL0NoZWNrIGlmIHRoZSBpbnN0aXR1dGlvbiBleGlzdHMgYW5kIGlzIG5vdCByZXZva2VkDQpjb25zdCBpbnN0aXR1dGlvbiA9IChhd2FpdCBxdWVyeSgiU0VMRUNUIiwgImluc3RpdHV0aW9ucyIsICJXSEVSRSBpbnN0aXR1dGlvbiA9ICQxOyIsIFtmcm9tXSkpLnJvd3NbMF07DQppZiAoaW5zdGl0dXRpb24gPT09IHVuZGVmaW5lZCkgew0KICAgIHJldHVybiAiSW5zdGl0dXRpb24gZG9lcyBub3QgZXhpc3RzIG9yIHVzZXIgaXMgbm90IGFuIGluc3RpdHV0aW9uLiI7DQp9DQppZiAoaW5zdGl0dXRpb24ucmV2b2tlZCAhPT0gbnVsbCAmJiBwYXlsb2FkLmFsbG93ID09PSB0cnVlKSB7DQogICAgcmV0dXJuICJJbnN0aXR1dGlvbiBpcyB3aXRoZHJhd24uIjsNCn0NCi8vQWRkIChvciB1cGRhdGUpIHRoZSBlbnRpdHkNCmNvbnN0IGNoYW5nZWQgPSBhd2FpdCBxdWVyeSgiSU5TRVJUIiwgImVudGl0aWVzIiwgIihlbnRpdHksIGluc3RpdHV0aW9uLCByZXZva2VkKSBWQUxVRVMgKCQxLCAkMiwgJDMpICINCiAgICArICJPTiBDT05GTElDVCBPTiBDT05TVFJBSU5UIGVudGl0aWVzX3BrZXkgRE8gVVBEQVRFIFNFVCByZXZva2VkID0gJDMgV0hFUkUgZW50aXRpZXMuaW5zdGl0dXRpb24gPSAkMjsiLCBbcGF5bG9hZC5yZWNlaXZlciwgZnJvbSwgcGF5bG9hZC5hbGxvdyA/IHVuZGVmaW5lZCA6IHByZXZpb3VzQmxvY2tUaW1lc3RhbXBdKTsNCi8vSWYgaXQgYWxyZWFkeSBleGlzdHMgYW5kIHRoZSBpbnN0aXR1dGlvbiB3YXMgbm90IHRoZSBvd25lci4NCmlmIChjaGFuZ2VkLnJvd0NvdW50ID09PSAwKSB7DQogICAgcmV0dXJuICJJbnN0aXR1dGlvbiBpcyBub3QgdGhlIG93bmVyIG9mIGVudGl0eS4iOw0KfQ0KLy9BZGQgKG9yIHVwZGF0ZSkgdGhlIG5hbWUgaWYgbmVlZGVkDQpjb25zdCBvbGROYW1lID0gKGF3YWl0IHF1ZXJ5KCJTRUxFQ1QiLCAiZW50aXR5X25hbWVzIiwgIldIRVJFIGVudGl0eSA9ICQxIEFORCBlbmRfdGltZSBJUyBOVUxMOyIsIFtwYXlsb2FkLnJlY2VpdmVyXSkpLnJvd3NbMF07DQppZiAob2xkTmFtZSAhPT0gdW5kZWZpbmVkICYmIG9sZE5hbWUubmFtZSAhPT0gcGF5bG9hZC5uYW1lKSB7DQogICAgYXdhaXQgcXVlcnkoIlVQREFURSIsICJlbnRpdHlfbmFtZXMiLCAiU0VUIGVuZF90aW1lID0gJDIgV0hFUkUgZW50aXR5ID0gJDEgQU5EIGVuZF90aW1lIElTIE5VTEw7IiwgW3BheWxvYWQucmVjZWl2ZXIsIHByZXZpb3VzQmxvY2tUaW1lc3RhbXBdKTsNCn0NCmlmIChvbGROYW1lID09PSB1bmRlZmluZWQgfHwgb2xkTmFtZS5uYW1lICE9PSBwYXlsb2FkLm5hbWUpIHsNCiAgICBhd2FpdCBxdWVyeSgiSU5TRVJUIiwgImVudGl0eV9uYW1lcyIsICIoZW50aXR5LCBuYW1lLCBzdGFydF90aW1lKSBWQUxVRVMgKCQxLCAkMiwgJDMpOyIsIFtwYXlsb2FkLnJlY2VpdmVyLCBwYXlsb2FkLm5hbWUsIHByZXZpb3VzQmxvY2tUaW1lc3RhbXBdKTsNCn0NCnJldHVybiAiT0siOw==

Init as text:
await query("CREATE", "entities", "(entity VARCHAR(35) PRIMARY KEY, " +
    "institution VARCHAR(35) NOT NULL REFERENCES institutions(institution), revoked BIGINT);", []);
await query("CREATE", "entity_names", "(entity VARCHAR(35) NOT NULL REFERENCES entities(entity), " +
    "name VARCHAR(128) NOT NULL, start_time BIGINT NOT NULL, end_time BIGINT);", []);
Code as text:
if (payload.name.length === 0 || payload.name.length > 128) {
    return "Invalid name.";
}
//Check if the institution exists and is not revoked
const institution = (await query("SELECT", "institutions", "WHERE institution = $1;", [from])).rows[0];
if (institution === undefined) {
    return "Institution does not exists or user is not an institution.";
}
if (institution.revoked !== null && payload.allow === true) {
    return "Institution is withdrawn.";
}
//Add (or update) the entity
const changed = await query("INSERT", "entities", "(entity, institution, revoked) VALUES ($1, $2, $3) "
    + "ON CONFLICT ON CONSTRAINT entities_pkey DO UPDATE SET revoked = $3 WHERE entities.institution = $2;", [payload.receiver, from, payload.allow ? undefined : previousBlockTimestamp]);
//If it already exists and the institution was not the owner.
if (changed.rowCount === 0) {
    return "Institution is not the owner of entity.";
}
//Add (or update) the name if needed
const oldName = (await query("SELECT", "entity_names", "WHERE entity = $1 AND end_time IS NULL;", [payload.receiver])).rows[0];
if (oldName !== undefined && oldName.name !== payload.name) {
    await query("UPDATE", "entity_names", "SET end_time = $2 WHERE entity = $1 AND end_time IS NULL;", [payload.receiver, previousBlockTimestamp]);
}
if (oldName === undefined || oldName.name !== payload.name) {
    await query("INSERT", "entity_names", "(entity, name, start_time) VALUES ($1, $2, $3);", [payload.receiver, payload.name, previousBlockTimestamp]);
}
return "OK";